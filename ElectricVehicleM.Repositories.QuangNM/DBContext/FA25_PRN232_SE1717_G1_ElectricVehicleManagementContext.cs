// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using ElectricVehicleM.Repositories.QuangNM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;

namespace ElectricVehicleM.Repositories.QuangNM.DBContext;

public partial class FA25_PRN232_SE1717_G1_ElectricVehicleManagementContext : DbContext
{
    public FA25_PRN232_SE1717_G1_ElectricVehicleManagementContext()
    {
    }

    public FA25_PRN232_SE1717_G1_ElectricVehicleManagementContext(DbContextOptions<FA25_PRN232_SE1717_G1_ElectricVehicleManagementContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CustomersBaoTdq> CustomersBaoTdqs { get; set; }

    public virtual DbSet<DealerContractsMinhNq> DealerContractsMinhNqs { get; set; }

    public virtual DbSet<DealersMinhNq> DealersMinhNqs { get; set; }

    public virtual DbSet<OrderItemsMinhPhn> OrderItemsMinhPhns { get; set; }

    public virtual DbSet<PromotionUsageQuangNm> PromotionUsageQuangNms { get; set; }

    public virtual DbSet<PromotionsQuangNm> PromotionsQuangNms { get; set; }

    public virtual DbSet<ReportDetailsPhucLt> ReportDetailsPhucLts { get; set; }

    public virtual DbSet<ReportsPhucLt> ReportsPhucLts { get; set; }

    public virtual DbSet<SalesOrdersMinhPhn> SalesOrdersMinhPhns { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    public virtual DbSet<TestDriveAppointmentsBaoTdq> TestDriveAppointmentsBaoTdqs { get; set; }

    public virtual DbSet<VehicleFeaturesDatPht> VehicleFeaturesDatPhts { get; set; }

    public virtual DbSet<VehiclesDatPht> VehiclesDatPhts { get; set; }

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=MSI\\SQLEXPRESS;Initial Catalog=FA25_PRN232_SE1717_G1_ElectricVehicleManagement;Integrated Security=True");

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CustomersBaoTdq>(entity =>
        {
            entity.HasKey(e => e.CustomerBaoTdqid).HasName("PK__Customer__DDC9DC39D0F83B6F");

            entity.ToTable("CustomersBaoTDQ");

            entity.Property(e => e.CustomerBaoTdqid)
                .ValueGeneratedNever()
                .HasColumnName("CustomerBaoTDQid");
            entity.Property(e => e.AppointmentBaoTdqid).HasColumnName("AppointmentBaoTDQid");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Dob)
                .HasColumnType("datetime")
                .HasColumnName("DOB");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.IsVip).HasColumnName("IsVIP");
            entity.Property(e => e.PhoneNumber).HasMaxLength(20);
            entity.Property(e => e.TotalSpent).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.UpdatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.AppointmentBaoTdq).WithMany(p => p.CustomersBaoTdqs)
                .HasForeignKey(d => d.AppointmentBaoTdqid)
                .HasConstraintName("FK__Customers__Appoi__4316F928");
        });

        modelBuilder.Entity<DealerContractsMinhNq>(entity =>
        {
            entity.HasKey(e => e.ContractMinhNqid).HasName("PK__DealerCo__9483BF1795552ACC");

            entity.ToTable("DealerContractsMinhNQ");

            entity.Property(e => e.ContractMinhNqid)
                .ValueGeneratedNever()
                .HasColumnName("ContractMinhNQid");
            entity.Property(e => e.ContractDate).HasColumnType("datetime");
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<DealersMinhNq>(entity =>
        {
            entity.HasKey(e => e.DealerMinhNqid).HasName("PK__DealersM__05AE17626FF1C5BE");

            entity.ToTable("DealersMinhNQ");

            entity.Property(e => e.DealerMinhNqid)
                .ValueGeneratedNever()
                .HasColumnName("DealerMinhNQid");
            entity.Property(e => e.ContactPerson).HasMaxLength(100);
            entity.Property(e => e.ContractDate).HasColumnType("datetime");
            entity.Property(e => e.ContractMinhNqid).HasColumnName("ContractMinhNQid");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.DealerName).HasMaxLength(100);
            entity.Property(e => e.DebtAmount).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.Location).HasMaxLength(200);
            entity.Property(e => e.PhoneNumber).HasMaxLength(20);
            entity.Property(e => e.SalesTarget).HasColumnType("decimal(15, 2)");

            entity.HasOne(d => d.ContractMinhNq).WithMany(p => p.DealersMinhNqs)
                .HasForeignKey(d => d.ContractMinhNqid)
                .HasConstraintName("FK__DealersMi__Contr__4CA06362");
        });

        modelBuilder.Entity<OrderItemsMinhPhn>(entity =>
        {
            entity.HasKey(e => e.OrderItemMinhPhnid).HasName("PK__OrderIte__DFAE84F36D82E30E");

            entity.ToTable("OrderItemsMinhPHN");

            entity.Property(e => e.OrderItemMinhPhnid)
                .ValueGeneratedNever()
                .HasColumnName("OrderItemMinhPHNid");
            entity.Property(e => e.ItemName).HasMaxLength(100);
        });

        modelBuilder.Entity<PromotionUsageQuangNm>(entity =>
        {
            entity.HasKey(e => e.UsageQuangNmid).HasName("PK__Promotio__35B3082FC51AEAE1");

            entity.ToTable("PromotionUsageQuangNM");

            entity.Property(e => e.UsageQuangNmid)
                .ValueGeneratedNever()
                .HasColumnName("UsageQuangNMid");
            entity.Property(e => e.CustomerName).HasMaxLength(100);
            entity.Property(e => e.UsedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<PromotionsQuangNm>(entity =>
        {
            entity.HasKey(e => e.PromotionQuangNmid).HasName("PK__Promotio__733B856A2AB996EB");

            entity.ToTable("PromotionsQuangNM");

            entity.Property(e => e.PromotionQuangNmid)
                .ValueGeneratedNever()
                .HasColumnName("PromotionQuangNMid");
            entity.Property(e => e.ApplicableModel).HasMaxLength(100);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.DiscountRate).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Title).HasMaxLength(100);
            entity.Property(e => e.UsageQuangNmid).HasColumnName("UsageQuangNMid");

            entity.HasOne(d => d.UsageQuangNm).WithMany(p => p.PromotionsQuangNms)
                .HasForeignKey(d => d.UsageQuangNmid)
                .HasConstraintName("FK__Promotion__Usage__47DBAE45");
        });

        modelBuilder.Entity<ReportDetailsPhucLt>(entity =>
        {
            entity.HasKey(e => e.DetailPhucLtid).HasName("PK__ReportDe__93FDF797D6A3A99B");

            entity.ToTable("ReportDetailsPhucLT");

            entity.Property(e => e.DetailPhucLtid)
                .ValueGeneratedNever()
                .HasColumnName("DetailPhucLTid");
            entity.Property(e => e.SectionName).HasMaxLength(100);
        });

        modelBuilder.Entity<ReportsPhucLt>(entity =>
        {
            entity.HasKey(e => e.ReportPhucLtid).HasName("PK__ReportsP__4BD68BAD2DFCC072");

            entity.ToTable("ReportsPhucLT");

            entity.Property(e => e.ReportPhucLtid)
                .ValueGeneratedNever()
                .HasColumnName("ReportPhucLTid");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.DetailPhucLtid).HasColumnName("DetailPhucLTid");
            entity.Property(e => e.GeneratedBy).HasMaxLength(100);
            entity.Property(e => e.GeneratedDate).HasColumnType("datetime");
            entity.Property(e => e.ReportName).HasMaxLength(100);
            entity.Property(e => e.ReportType).HasMaxLength(50);
            entity.Property(e => e.SalesFigure).HasColumnType("decimal(15, 2)");

            entity.HasOne(d => d.DetailPhucLt).WithMany(p => p.ReportsPhucLts)
                .HasForeignKey(d => d.DetailPhucLtid)
                .HasConstraintName("FK__ReportsPh__Detai__5165187F");
        });

        modelBuilder.Entity<SalesOrdersMinhPhn>(entity =>
        {
            entity.HasKey(e => e.OrderMinhPhnid).HasName("PK__SalesOrd__CEC14920075D38BC");

            entity.ToTable("SalesOrdersMinhPHN");

            entity.Property(e => e.OrderMinhPhnid)
                .ValueGeneratedNever()
                .HasColumnName("OrderMinhPHNid");
            entity.Property(e => e.BuyerName).HasMaxLength(100);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.DeliveryDate).HasColumnType("datetime");
            entity.Property(e => e.OrderCode).HasMaxLength(50);
            entity.Property(e => e.OrderDate).HasColumnType("datetime");
            entity.Property(e => e.OrderItemMinhPhnid).HasColumnName("OrderItemMinhPHNid");
            entity.Property(e => e.PaymentType).HasMaxLength(50);
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.VehicleModel).HasMaxLength(100);

            entity.HasOne(d => d.OrderItemMinhPhn).WithMany(p => p.SalesOrdersMinhPhns)
                .HasForeignKey(d => d.OrderItemMinhPhnid)
                .HasConstraintName("FK__SalesOrde__Order__3E52440B");
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId);

            entity.ToTable("System.UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<TestDriveAppointmentsBaoTdq>(entity =>
        {
            entity.HasKey(e => e.AppointmentBaoTdqid).HasName("PK__TestDriv__AADF946B7B0BBE30");

            entity.ToTable("TestDriveAppointmentsBaoTDQ");

            entity.Property(e => e.AppointmentBaoTdqid)
                .ValueGeneratedNever()
                .HasColumnName("AppointmentBaoTDQid");
            entity.Property(e => e.AppointmentDate).HasColumnType("datetime");
            entity.Property(e => e.VehicleModel).HasMaxLength(100);
        });

        modelBuilder.Entity<VehicleFeaturesDatPht>(entity =>
        {
            entity.HasKey(e => e.FeatureDatPhtid).HasName("PK__VehicleF__109DD413B4F539A7");

            entity.ToTable("VehicleFeaturesDatPHT");

            entity.Property(e => e.FeatureDatPhtid)
                .ValueGeneratedNever()
                .HasColumnName("FeatureDatPHTid");
            entity.Property(e => e.FeatureName).HasMaxLength(100);
        });

        modelBuilder.Entity<VehiclesDatPht>(entity =>
        {
            entity.HasKey(e => e.VehicleDatPhtid).HasName("PK__Vehicles__B302960A2848F59C");

            entity.ToTable("VehiclesDatPHT");

            entity.Property(e => e.VehicleDatPhtid)
                .ValueGeneratedNever()
                .HasColumnName("VehicleDatPHTid");
            entity.Property(e => e.Color).HasMaxLength(50);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.FeatureDatPhtid).HasColumnName("FeatureDatPHTid");
            entity.Property(e => e.ModelName).HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ReleaseDate).HasColumnType("datetime");
            entity.Property(e => e.Version).HasMaxLength(50);

            entity.HasOne(d => d.FeatureDatPht).WithMany(p => p.VehiclesDatPhts)
                .HasForeignKey(d => d.FeatureDatPhtid)
                .HasConstraintName("FK__VehiclesD__Featu__398D8EEE");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}